{"version":3,"sources":["Components/GradeComponent.js","Components/StudentCard.js","Components/Searchbar.js","App.js","reportWebVitals.js","index.js"],"names":["GradeComponent","grade","index","StudentCard","data","updateStudent","useState","average","setAverage","newTag","setNewTag","grades","cardRef","useRef","useEffect","totalGrades","i","length","parseInt","Math","floor","className","ref","src","pic","alt","firstName","lastName","email","company","skill","map","tag","t","type","value","onChange","e","target","onKeyPress","keyCode","which","push","bind","this","onClick","current","classList","toggle","width","height","viewBox","fill","xmlns","d","Searchbar","searchTerm","setSearchTerm","placeholder","App","results","setResults","students","setStudents","searchName","setSearchName","searchTag","setSearchTag","fetch","then","response","json","filteredResults","filter","result","toLowerCase","includes","obj","forEach","student","id","res","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.36812bee.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nfunction GradeComponent({ grade, index }) {\r\n    return (\r\n        <p>\r\n            Test {index}: {grade}%\r\n        </p>\r\n    );\r\n}\r\n\r\nexport default GradeComponent;\r\n","import React, { useState, useEffect, useRef } from \"react\";\r\n\r\nimport \"./StudentCard.scss\";\r\n\r\n//Components Import\r\nimport GradeComponent from \"./GradeComponent\";\r\n\r\nfunction StudentCard({ data, updateStudent }) {\r\n    const [average, setAverage] = useState(0);\r\n    const [newTag, setNewTag] = useState(\"\");\r\n\r\n    const grades = data.grades;\r\n    const cardRef = useRef(null);\r\n\r\n    useEffect(() => {\r\n        let totalGrades = 0;\r\n        for (let i = 0; i < grades.length; i++) {\r\n            totalGrades += parseInt(grades[i], 10);\r\n        }\r\n\r\n        setAverage(Math.floor(totalGrades / grades.length));\r\n    }, [grades]);\r\n\r\n    useEffect(() => {\r\n        updateStudent(data);\r\n    }, [data, updateStudent]);\r\n\r\n    let handleExpand = () => {\r\n        cardRef.current.classList.toggle(\"studentCard-active\");\r\n    };\r\n\r\n    const addTag = (e) => {\r\n        let code = e.keyCode || e.which;\r\n        if (code === 13 && newTag !== \"\" && newTag !== null) {\r\n            if (!data.tag) {\r\n                data.tag = [newTag];\r\n            } else {\r\n                data.tag.push(newTag);\r\n            }\r\n            setNewTag(\"\");\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"studentCard\" ref={cardRef}>\r\n            <img src={data.pic} alt={data.firstName} />\r\n            <div className=\"details\">\r\n                <h1>\r\n                    {data.firstName} {data.lastName}\r\n                </h1>\r\n                <p>Email: {data.email}</p>\r\n                <p>Company: {data.company}</p>\r\n                <p>Skill: {data.skill}</p>\r\n                <p>Average: {average}%</p>\r\n\r\n                <div className=\"grades\">\r\n                    {grades.map((grade, i) => (\r\n                        <GradeComponent\r\n                            grade={grade}\r\n                            key={i + 1}\r\n                            index={i + 1}\r\n                        />\r\n                    ))}\r\n                </div>\r\n\r\n                <div className=\"tags\">\r\n                    {data.tag &&\r\n                        data.tag.map((t, index) => (\r\n                            <p className=\"tag\" key={index}>\r\n                                {t}\r\n                            </p>\r\n                        ))}\r\n                </div>\r\n\r\n                <input\r\n                    type=\"text\"\r\n                    className=\"addTag\"\r\n                    value={newTag}\r\n                    onChange={(e) => setNewTag(e.target.value)}\r\n                    onKeyPress={addTag.bind(this)}\r\n                />\r\n            </div>\r\n            <div className=\"btn\">\r\n                <svg\r\n                    onClick={handleExpand}\r\n                    width=\"25\"\r\n                    height=\"25\"\r\n                    viewBox=\"0 0 25 25\"\r\n                    fill=\"none\"\r\n                    xmlns=\"http://www.w3.org/2000/svg\"\r\n                >\r\n                    <path\r\n                        className=\"line1\"\r\n                        d=\"M10 2.5C10 1.11929 11.1193 0 12.5 0V0C13.8807 0 15 1.11929 15 2.5V22.5C15 23.8807 13.8807 25 12.5 25V25C11.1193 25 10 23.8807 10 22.5V2.5Z\"\r\n                        fill=\"black\"\r\n                    />\r\n                    <path\r\n                        className=\"line2\"\r\n                        d=\"M2.5 15C1.11929 15 0 13.8807 0 12.5V12.5C0 11.1193 1.11929 10 2.5 10L22.5 10C23.8807 10 25 11.1193 25 12.5V12.5C25 13.8807 23.8807 15 22.5 15L2.5 15Z\"\r\n                        fill=\"black\"\r\n                    />\r\n                </svg>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default StudentCard;\r\n","import React from \"react\";\r\n\r\nfunction Searchbar({ searchTerm, setSearchTerm, placeholder }) {\r\n    return (\r\n        <input\r\n            className=\"searchbar\"\r\n            placeholder={placeholder}\r\n            type=\"text\"\r\n            value={searchTerm}\r\n            onChange={(e) => setSearchTerm(e.target.value)}\r\n        />\r\n    );\r\n}\r\n\r\nexport default Searchbar;\r\n","import \"./App.scss\";\n\nimport { useEffect, useState } from \"react\";\n\n//Components Import\nimport StudentCard from \"./Components/StudentCard\";\nimport Searchbar from \"./Components/Searchbar\";\n\nfunction App() {\n    const [results, setResults] = useState([]);\n    const [students, setStudents] = useState([]);\n\n    const [searchName, setSearchName] = useState(\"\");\n    const [searchTag, setSearchTag] = useState(\"\");\n\n    useEffect(() => {\n        let data = fetch(\"https://api.hatchways.io/assessment/students\")\n            .then((response) => response.json())\n            .then((data) => {\n                setResults(data.students);\n                setStudents(data.students);\n            });\n\n        return data;\n    }, []);\n\n    useEffect(() => {\n        let filteredResults = results.filter((result) => {\n            let name = result.firstName + \" \" + result.lastName;\n\n            let isName = name.toLowerCase().includes(searchName.toLowerCase());\n\n            return isName;\n        });\n\n        setStudents(filteredResults);\n    }, [searchName]);\n\n    // useEffect(() => {\n    //     let filteredResults = results.filter((result) => {\n    //         let tag = result.tag ? result.tag.toString() : null;\n\n    //         let isTag = tag\n    //             ? tag.toLowerCase().includes(searchTag.toLowerCase())\n    //             : false;\n\n    //         return isTag;\n    //     });\n\n    //     setStudents(filteredResults);\n    // }, [searchTag]);\n\n    // useEffect(() => {\n    //     let filteredResults = results.filter((result) => {\n    //         const name = result.firstName + \" \" + result.lastName;\n    //         const isName = name\n    //             .toLowerCase()\n    //             .includes(searchName.toLowerCase());\n\n    //         const tags =\n    //             result.tag !== undefined ? result.tag.toString() : false;\n    //         const isTag =\n    //             typeof tags === \"string\"\n    //                 ? tags.toLowerCase().includes(searchTag.toLowerCase())\n    //                 : false;\n\n    //         return isName && isTag;\n    //     });\n\n    //     setStudents(filteredResults);\n    // }, [searchName, searchTag]);\n\n    const updateStudent = (obj) => {\n        students.forEach((student) => {\n            if (student.id === obj.id) student.tag = obj.tag;\n        });\n\n        results.forEach((res) => {\n            if (res.id === obj.id) res.tag = obj.tag;\n        });\n    };\n\n    return (\n        <div className=\"App\">\n            <Searchbar\n                searchTerm={searchName}\n                setSearchTerm={setSearchName}\n                placeholder={\"Search by name...\"}\n            />\n\n            <Searchbar\n                searchTerm={searchTag}\n                setSearchTerm={setSearchTag}\n                placeholder={\"Search by tag...\"}\n            />\n            <div className=\"students\">\n                {students.map((result) => (\n                    <StudentCard\n                        data={result}\n                        key={result.id}\n                        updateStudent={updateStudent}\n                    />\n                ))}\n            </div>\n        </div>\n    );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.scss\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n    <React.StrictMode>\n        <App />\n    </React.StrictMode>,\n    document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}